import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
import { createClient } from "https://esm.sh/@supabase/supabase-js@2";


const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

// —É—Ç–∏–ª–∏—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
async function sendTg(chatId: number, text: string) {
  await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ chat_id: chatId, text, parse_mode: "HTML" }),
  });
}

serve(async (req) => {
  // 1) –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ POST-–∑–∞–ø—Ä–æ—Å –æ—Ç Telegram
  if (req.method !== "POST") return new Response("ok");

  const { message } = await req.json();
  if (!message?.text) return new Response("ok");

  // 2) –ò–∑–≤–ª–µ–∫–∞–µ–º EAN
  let code = message.text.trim();
  // —É–±–∏—Ä–∞–µ–º /start –∏–ª–∏ –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã
  code = code.replace(/^\/\w+\s*/i, "").trim();

  if (!/^\d{12,13}$/.test(code)) {
    await sendTg(
      message.chat.id,
      "üîç –û—Ç–ø—Ä–∞–≤—å—Ç–µ 12- –∏–ª–∏ 13-–∑–Ω–∞—á–Ω—ã–π EAN-13 –¥–ª—è –ø–æ–∏—Å–∫–∞."
    );
    return new Response("ok");
  }

  // 3) –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º Supabase
  const { data, error } = await supabase
    .from("products")
    .select("sku,name,location")
    .eq("ean13", code)
    .single();

  if (error || !data) {
    await sendTg(message.chat.id, "‚ùå –®—Ç—Ä–∏—Ö-–∫–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    return new Response("ok");
  }

  // 4) –§–æ—Ä–º–∏—Ä—É–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
  const text = `üì¶ <b>${data.name}</b>\n\n` +
               `üÜî –ê—Ä—Ç–∏–∫—É–ª: <code>${data.sku}</code>\n` +
               `üìç –Ø—á–µ–π–∫–∞: <b>${data.location}</b>`;

  await sendTg(message.chat.id, text);
  return new Response("ok");
});
